<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.smartmap</groupId>
    <artifactId>sano3</artifactId>
    <version>1.0-SNAPSHOT</version>


    <properties>
        <junit.version>4.12</junit.version>
        <log4j.version>1.2.17</log4j.version>
        <slf4j.version>1.7.21</slf4j.version>
        <commmons.collections.version>3.2.1</commmons.collections.version>
        <commons.fileupload.version>1.2.1</commons.fileupload.version>
        <commons.io.version>2.4</commons.io.version>

        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    </properties>

    <dependencies>
		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.2</version>
		</dependency>
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!--  General data-binding functionality for Jackson: works on core streaming API  -->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.4</version>
        </dependency>
        <dependency>
            <!--  Json  -->
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20160810</version>
        </dependency>
        <dependency>
            <!--  Core Protocol Buffers library. Protocol Buffers are a way of encoding structured data in an efficient yet extensible format.  -->
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <!--  A free and open-source alternative to Macromedia's Java Flash Remoting that is capable of providing application services to Flash MX.  -->
            <groupId>org.openamf</groupId>
            <artifactId>openamf</artifactId>
            <version>1.12</version>
        </dependency>
        <!--
        <dependency>
            <groupId>com.exadel.flamingo.flex</groupId>
            <artifactId>amf-serializer</artifactId>
            <version>2.2.0</version>
        </dependency>
        -->
        <dependency>
            <!--  A plugin to allow execution of system and Java programs  -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.5.0</version>
        </dependency>
        <dependency>
            <!--  Runs Ant scripts embedded in the POM  -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.8</version>
        </dependency>
        <dependency>
            <!--  The Resources Plugin handles the copying of project resources to the output directory. There are two different kinds of resources: main resources and test resources.   -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <!--    Builds a Java Archive (JAR) file from the compiled project classes and resources.   -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>3.0.2</version>
        </dependency>
        <dependency>
            <!--  The Compiler Plugin is used to compile the sources of your project. -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.5.1</version>
        </dependency>
        <dependency>
            <!--  Repackages the project classes together with their dependencies into a single uber-jar, optionally renaming classes or removing unused classes.  -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>2.4.3</version>
        </dependency>
        <dependency>
            <!--  The Maven Source Plugin creates a JAR archive of the source files of the current project.  -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
            </exclusions>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <!--  The slf4j API  -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
        </dependency>
        <dependency>
            <!--  SLF4J LOG4J-12 Binding  -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.21</version>
        </dependency>
        <dependency>
            <!--  Maven Surefire MOJO in maven-surefire-plugin  -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.19.1</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
	
	<!--
	<repositories>
		<repository>
			<id>io.spring.repo.maven.release</id>
			<url>http://repo.spring.io/release/</url>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
		<repository>
			<id>mvnrepository</id>
			<url>http://mvnrepository.com/</url>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
		<repository>
			<id>oschina</id>
			<url>http://maven.oschina.net/content/repositories/central/</url>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
		<repository>
			<id>mvnCenterRepository</id>
			<url>http://repo1.maven.org/maven2/</url>
			<snapshots><enabled>false</enabled></snapshots>
		</repository>
	</repositories>
	-->
	
    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-classpath</argument>
                        <classpath>
                        </classpath>
                        <argument>com.salon.App</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/Abstract*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="test">
                                <!--
                                <exec executable="bash" dir="../Temp">
                                    <arg value="-c"/>
                                    <arg value="ps aux | grep ./uninstall > isFinished.txt"/>
                                </exec>
                                -->
                                <exec executable="cmd" dir="../../../Resource/JavaScript">
                                    <arg value="/c"/>
                                    <arg value="http-server ./"/>
                                    <!--
                                    <arg value="tasklist | findstr &quot;_uninstall*&quot; > isFinished.txt" />
                                    -->
                                </exec>
                            </target>
                        </configuration>

                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>